apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:1.0
        name: hello-app
        resources:
          limits:
            cpu: 125m
            memory: 125Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: web
  name: web
spec:
  ports:
  - port: 8080
  selector:
    app: web
---
# # ingress.yaml
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: web-ingress3
#   annotations:
#     # This enables HTTP connections from Internet clients
#     kubernetes.io/ingress.allow-http: "true"
#     # This tells Google Cloud to associate the External Load Balancer with the static IP which we created earlier
#     kubernetes.io/ingress.global-static-ip-name: meatcloud
#     kubernetes.io/ingress.class: gce
#     cert-manager.io/cluster-issuer: letsencrypt-staging # cert-manager
# spec:
#   ingressClassName: gce # This tells Google Cloud to create an External Load Balancer to realize this Ingress
#   defaultBackend:
#     service:
#       name: web
#       port:
#         number: 8080
#   tls:
#   - secretName: web-ssl
#     hosts:
#     - '*.meatcloud.io'
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: store-external
  labels:
    gateway: external-http
spec:
  parentRefs:
  - name: external-http
    namespace: gateway-system
  hostnames:
  - "meatcloud.io"
  rules:
  - backendRefs:
    - name: web
      port: 8080

